{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df1203"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate_Demo_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Aggrregate_DF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "EmployeeDepartment"
							},
							{
								"name": "destination",
								"value": "DeptWiseTotalSalary"
							}
						],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Aggrregate_DF",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Aggrregate_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exists_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExistDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExistDataFlow",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ExistDataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnionWindowPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WindowDF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "WindowDF",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/WindowDF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute_Employee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_DLStorage_Gen2_output",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ExecuteEmp_detail.csv",
						"folderPath": "Output",
						"fileSystem": "gen2blobcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPLOYEE_ID",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "HIRE_DATE",
						"type": "String"
					},
					{
						"name": "SALARY",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ITEmployeesSCR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_DLStorage_Gen2_output",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ExecuteEmp_detail.csv",
						"folderPath": "Output",
						"fileSystem": "gen2blobcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPLOYEE_ID",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "HIRE_DATE",
						"type": "String"
					},
					{
						"name": "SALARY",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_ADL_Target_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_DLStorage_Gen2_output",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Output",
						"fileSystem": "gen2blobcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ShippingEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_DLStorage_Gen2_output",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ShippingeEmpdetails.csv",
						"folderPath": "Output",
						"fileSystem": "gen2blobcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPLOYEE_ID",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "HIRE_DATE",
						"type": "String"
					},
					{
						"name": "SALARY",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Check_empdept_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Exists_demo",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-05-11T02:15:00.000Z",
						"endTime": "2020-05-12T02:15:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Exists_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggrregate_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Employee_details",
								"type": "DatasetReference"
							},
							"name": "Employees"
						},
						{
							"dataset": {
								"referenceName": "DEP_SCR_ADLS",
								"type": "DatasetReference"
							},
							"name": "Departments"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "DeptwiseTotSalary"
						}
					],
					"transformations": [
						{
							"name": "AggOnDeptwise"
						},
						{
							"name": "DeptWiseSorting"
						},
						{
							"name": "SequenceNo"
						},
						{
							"name": "LookupDeptName"
						},
						{
							"name": "ReorderColums"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tEMAIL as string,\n\t\tPHONE_NUMBER as string,\n\t\tHIRE_DATE as string,\n\t\tJOB_ID as string,\n\t\tSALARY as decimal(10,0),\n\t\tCOMMISSION_PCT as decimal(10,0),\n\t\tMANAGER_ID as integer,\n\t\tDEPARTMENT_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpartitionBy('hash', 1)) ~> Employees\nsource(output(\n\t\tDEPARTMENT_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tMANAGER_ID as integer,\n\t\tLOCATION_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> Departments\nEmployees aggregate(groupBy(DEPARTMENT_ID),\n\tDeptwiseTotal_Salary = sum(SALARY),\n\tpartitionBy('hash', 1)) ~> AggOnDeptwise\nAggOnDeptwise sort(asc(DEPARTMENT_ID, false),\n\tpartitionBy('hash', 1)) ~> DeptWiseSorting\nDeptWiseSorting keyGenerate(output(SNO as long),\n\tstartAt: 1L) ~> SequenceNo\nSequenceNo, Departments lookup(AggOnDeptwise@DEPARTMENT_ID == Departments@DEPARTMENT_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDeptName\nLookupDeptName select(mapColumn(\n\t\tSNO,\n\t\tDEPARTMENT_ID = AggOnDeptwise@DEPARTMENT_ID,\n\t\tDEPARTMENT_NAME,\n\t\tDeptwiseTotal_Salary\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReorderColums\nReorderColums sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DeptWiseTotSalary.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DeptwiseTotSalary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Output_ADL_Target_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExistDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Empdept_target",
								"type": "DatasetReference"
							},
							"name": "Employees"
						},
						{
							"dataset": {
								"referenceName": "DEP_SCR_ADLS",
								"type": "DatasetReference"
							},
							"name": "Departments"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "EmpDeptExists"
						}
					],
					"transformations": [
						{
							"name": "ValidateDeptExists"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as short,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tEMAIL as string,\n\t\tPHONE_NUMBER as string,\n\t\tHIRE_DATE as string,\n\t\tJOB_ID as string,\n\t\tSALARY as short,\n\t\tCOMMISSION_PCT as short,\n\t\tMANAGER_ID as string,\n\t\tDEPARTMENT_ID as short,\n\t\tDEPARTMENT_NAME as string,\n\t\tLOCATION_ID as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Employees\nsource(output(\n\t\tDEPARTMENT_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tMANAGER_ID as integer,\n\t\tLOCATION_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Departments\nEmployees, Departments exists(Employees@DEPARTMENT_ID == Departments@DEPARTMENT_ID,\n\tnegate:false,\n\tbroadcast: 'auto')~> ValidateDeptExists\nValidateDeptExists sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EmpDeptExists.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmpDeptExists"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Output_ADL_Target_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WindowDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ITEmployeesSCR",
								"type": "DatasetReference"
							},
							"name": "ITEmployee"
						},
						{
							"dataset": {
								"referenceName": "Execute_Employee",
								"type": "DatasetReference"
							},
							"name": "ExecuteEmployee"
						},
						{
							"dataset": {
								"referenceName": "ShippingEmployee",
								"type": "DatasetReference"
							},
							"name": "ShippingEmp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "DeptWiseSalaryRank"
						}
					],
					"transformations": [
						{
							"name": "UnionEmpolyee"
						},
						{
							"name": "Window"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tHIRE_DATE as string,\n\t\tSALARY as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tCOMMISSION_PCT as decimal(10,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> ITEmployee\nsource(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tHIRE_DATE as string,\n\t\tSALARY as integer,\n\t\tCOMMISSION_PCT as decimal(10,0),\n\t\tDEPARTMENT_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> ExecuteEmployee\nsource(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tHIRE_DATE as string,\n\t\tSALARY as integer,\n\t\tCOMMISSION_PCT as decimal(10,0),\n\t\tDEPARTMENT_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> ShippingEmp\nExecuteEmployee, ITEmployee, ShippingEmp union(byName: true)~> UnionEmpolyee\nUnionEmpolyee window(over(DEPARTMENT_NAME),\n\tasc(SALARY, true),\n\tDenseRank = denseRank()) ~> Window\nWindow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DeptWiseSalaryRank.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DeptWiseSalaryRank"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ITEmployeesSCR')]",
				"[concat(variables('factoryId'), '/datasets/Execute_Employee')]",
				"[concat(variables('factoryId'), '/datasets/ShippingEmployee')]",
				"[concat(variables('factoryId'), '/datasets/Output_ADL_Target_DS')]"
			]
		}
	]
}