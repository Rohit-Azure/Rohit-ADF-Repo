{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df1203"
		},
		"Parameterized_Oracle_LS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Parameterized_Oracle_LS'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Parameterized_Oracle_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ServerName": {
						"type": "string"
					},
					"DBName": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"Password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Parameterized_Oracle_LS_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnpermisesSelfHostedIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SetVariableIFCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SetFileType",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName",
							"value": {
								"value": "@replace(pipeline().parameters.FileName,'Sales','')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SetFileType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('FileName'),'Hourly')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Storedprocedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Proc_Pipeline_detail]",
										"storedProcedureParameters": {
											"PipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipeTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": "FAILED",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Ls_AzureSynapseAnalyticsDW",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Employee_details",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Copy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Execute_Employee",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Output_ADL_Target_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"variables": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Csv_file_Delimited_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_FileSystemSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "department.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME     ",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "LOCATION_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dept_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_oracledb_source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "DEPARTMENTS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parameterized_Oracle_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Parameterized_Oracle_LS",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@dataset().ServerName",
							"type": "Expression"
						},
						"DBName": {
							"value": "@dataset().DBName",
							"type": "Expression"
						},
						"UserName": {
							"value": "@dataset().UserName",
							"type": "Expression"
						},
						"Password": {
							"value": "@dataset().Password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ServerName": {
						"type": "String"
					},
					"DBName": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"TblName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().DBName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TblName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Parameterized_Oracle_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_TBL_EMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_oracledb_source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "EMPLOYEES"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_crz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_oracledb_source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "DEPARTMENTS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_hjj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_oracledb_source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "DEPARTMENTS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/deptOracleDB_DESTN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_OracleDB_Dept_DESTN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "DEPTS_ADF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggrregate_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Employee_details",
								"type": "DatasetReference"
							},
							"name": "Employees"
						},
						{
							"dataset": {
								"referenceName": "DEP_SCR_ADLS",
								"type": "DatasetReference"
							},
							"name": "Departments"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "DeptwiseTotSalary"
						}
					],
					"transformations": [
						{
							"name": "AggOnDeptwise"
						},
						{
							"name": "DeptWiseSorting"
						},
						{
							"name": "SequenceNo"
						},
						{
							"name": "LookupDeptName"
						},
						{
							"name": "ReorderColums"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tEMAIL as string,\n\t\tPHONE_NUMBER as string,\n\t\tHIRE_DATE as string,\n\t\tJOB_ID as string,\n\t\tSALARY as decimal(10,0),\n\t\tCOMMISSION_PCT as decimal(10,0),\n\t\tMANAGER_ID as integer,\n\t\tDEPARTMENT_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpartitionBy('hash', 1)) ~> Employees\nsource(output(\n\t\tDEPARTMENT_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tMANAGER_ID as integer,\n\t\tLOCATION_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> Departments\nEmployees aggregate(groupBy(DEPARTMENT_ID),\n\tDeptwiseTotal_Salary = sum(SALARY),\n\tpartitionBy('hash', 1)) ~> AggOnDeptwise\nAggOnDeptwise sort(asc(DEPARTMENT_ID, false),\n\tpartitionBy('hash', 1)) ~> DeptWiseSorting\nDeptWiseSorting keyGenerate(output(SNO as long),\n\tstartAt: 1L) ~> SequenceNo\nSequenceNo, Departments lookup(AggOnDeptwise@DEPARTMENT_ID == Departments@DEPARTMENT_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDeptName\nLookupDeptName select(mapColumn(\n\t\tSNO,\n\t\tDEPARTMENT_ID = AggOnDeptwise@DEPARTMENT_ID,\n\t\tDEPARTMENT_NAME,\n\t\tDeptwiseTotal_Salary\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReorderColums\nReorderColums sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DeptWiseTotSalary.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DeptwiseTotSalary"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExistDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Empdept_target",
								"type": "DatasetReference"
							},
							"name": "Employees"
						},
						{
							"dataset": {
								"referenceName": "DEP_SCR_ADLS",
								"type": "DatasetReference"
							},
							"name": "Departments"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "EmpDeptExists"
						}
					],
					"transformations": [
						{
							"name": "ValidateDeptExists"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as short,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tEMAIL as string,\n\t\tPHONE_NUMBER as string,\n\t\tHIRE_DATE as string,\n\t\tJOB_ID as string,\n\t\tSALARY as short,\n\t\tCOMMISSION_PCT as short,\n\t\tMANAGER_ID as string,\n\t\tDEPARTMENT_ID as short,\n\t\tDEPARTMENT_NAME as string,\n\t\tLOCATION_ID as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Employees\nsource(output(\n\t\tDEPARTMENT_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tMANAGER_ID as integer,\n\t\tLOCATION_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Departments\nEmployees, Departments exists(Employees@DEPARTMENT_ID == Departments@DEPARTMENT_ID,\n\tnegate:false,\n\tbroadcast: 'auto')~> ValidateDeptExists\nValidateDeptExists sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EmpDeptExists.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmpDeptExists"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Join_Emp_Dept_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Employee_details",
								"type": "DatasetReference"
							},
							"name": "EmpSCR"
						},
						{
							"dataset": {
								"referenceName": "DEP_SCR_ADLS",
								"type": "DatasetReference"
							},
							"name": "DeptSCR"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Empdept_target",
								"type": "DatasetReference"
							},
							"name": "EmpDeptTraget"
						}
					],
					"transformations": [
						{
							"name": "JoinEmpDept"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedCommissionVal"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tEMAIL as string,\n\t\tPHONE_NUMBER as string,\n\t\tHIRE_DATE as date,\n\t\tJOB_ID as string,\n\t\tSALARY as decimal(10,0),\n\t\tCOMMISSION_PCT as decimal(10,0),\n\t\tMANAGER_ID as integer,\n\t\tDEPARTMENT_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> EmpSCR\nsource(output(\n\t\tDEPARTMENT_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tMANAGER_ID as integer,\n\t\tLOCATION_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> DeptSCR\nEmpSCR, DeptSCR join(EmpSCR@DEPARTMENT_ID == DeptSCR@DEPARTMENT_ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinEmpDept\nJoinEmpDept select(mapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tEMAIL,\n\t\tPHONE_NUMBER,\n\t\tHIRE_DATE,\n\t\tJOB_ID,\n\t\tSALARY,\n\t\tCOMMISSION_PCT,\n\t\tMANAGER_ID = EmpSCR@MANAGER_ID,\n\t\tDEPARTMENT_ID = EmpSCR@DEPARTMENT_ID,\n\t\tDEPARTMENT_NAME,\n\t\tLOCATION_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(COMMISSION_PCT = iifNull(COMMISSION_PCT, 10)) ~> DerivedCommissionVal\nDerivedCommissionVal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EmpDept_Details.csv'],\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tEMAIL,\n\t\tPHONE_NUMBER,\n\t\tHIRE_DATE,\n\t\tJOB_ID,\n\t\tSALARY,\n\t\tCOMMISSION_PCT,\n\t\tMANAGER_ID,\n\t\tDEPARTMENT_ID,\n\t\tDEPARTMENT_NAME,\n\t\tLOCATION_ID\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> EmpDeptTraget"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pivot_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Input_data_SCR",
								"type": "DatasetReference"
							},
							"name": "FinancialYearSizeBands"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "PivotFinancialdata"
						}
					],
					"transformations": [
						{
							"name": "Pivot1"
						}
					],
					"script": "source(output(\n\t\tyear as integer,\n\t\tindustry_code_ANZSIC as string,\n\t\tindustry_name_ANZSIC as string,\n\t\trme_size_grp as string,\n\t\tvariable as string,\n\t\tvalue as integer,\n\t\tunit as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> FinancialYearSizeBands\nFinancialYearSizeBands pivot(groupBy(industry_name_ANZSIC),\n\tpivotBy(variable),\n\tSum_of_Variable = sum(value),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot1\nPivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Pivot_Financial_data'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PivotFinancialdata"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SplitonDept')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EmpDeptAll_DS",
								"type": "DatasetReference"
							},
							"name": "EmpDeptSCR"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "ITEmpRecords"
						},
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "ExecuteEmpDetails"
						},
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "PurchaseEmpdetails"
						},
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "ShippingeEmpdetails"
						},
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "SalesEmpdetails"
						}
					],
					"transformations": [
						{
							"name": "CondlSplitondep"
						},
						{
							"name": "CommNVLReplace"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tHIRE_DATE as string,\n\t\tSALARY as integer,\n\t\tCOMMISSION_PCT as double,\n\t\tDEPARTMENT_NAME as string,\n\t\tDEPARTMENT_ID7 as integer,\n\t\tDEPARTMENT_ID8 as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'Source_File_path',\n\tpreferredIntegralType: 'integer',\n\tpartitionBy('hash', 1)) ~> EmpDeptSCR\nEmpDeptSCR split(equals(DEPARTMENT_NAME,'IT'),\n\tequals(DEPARTMENT_NAME,'Executive'),\n\tequals(DEPARTMENT_NAME, 'Purchasing'),\n\tequals(DEPARTMENT_NAME, 'Shipping'),\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> CondlSplitondep@(IT, Executive, Purchasing, Shipping, Sales)\nCondlSplitondep@IT derive(COMMISSION_PCT = iifNull(COMMISSION_PCT, 10)) ~> CommNVLReplace\nCommNVLReplace sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ITEmployee_Details.csv'],\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tHIRE_DATE,\n\t\tSALARY,\n\t\tDEPARTMENT_NAME,\n\t\tCOMMISSION_PCT\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ITEmpRecords\nCondlSplitondep@Executive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ExecuteEmp_detail.csv'],\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tHIRE_DATE,\n\t\tSALARY,\n\t\tCOMMISSION_PCT,\n\t\tDEPARTMENT_NAME\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ExecuteEmpDetails\nCondlSplitondep@Purchasing sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PurchaseEmpdetails.csv'],\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tHIRE_DATE,\n\t\tSALARY,\n\t\tCOMMISSION_PCT,\n\t\tDEPARTMENT_NAME\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PurchaseEmpdetails\nCondlSplitondep@Shipping sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ShippingeEmpdetails.csv'],\n\tmapColumn(\n\t\tEMPLOYEE_ID,\n\t\tFIRST_NAME,\n\t\tLAST_NAME,\n\t\tHIRE_DATE,\n\t\tSALARY,\n\t\tCOMMISSION_PCT,\n\t\tDEPARTMENT_NAME\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ShippingeEmpdetails\nCondlSplitondep@Sales sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SalesEmpdetails.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SalesEmpdetails"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WindowDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ITEmployeesSCR",
								"type": "DatasetReference"
							},
							"name": "ITEmployee"
						},
						{
							"dataset": {
								"referenceName": "Execute_Employee",
								"type": "DatasetReference"
							},
							"name": "ExecuteEmployee"
						},
						{
							"dataset": {
								"referenceName": "ShippingEmployee",
								"type": "DatasetReference"
							},
							"name": "ShippingEmp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Output_ADL_Target_DS",
								"type": "DatasetReference"
							},
							"name": "DeptWiseSalaryRank"
						}
					],
					"transformations": [
						{
							"name": "UnionEmpolyee"
						},
						{
							"name": "Window"
						}
					],
					"script": "source(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tHIRE_DATE as string,\n\t\tSALARY as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tCOMMISSION_PCT as decimal(10,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> ITEmployee\nsource(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tHIRE_DATE as string,\n\t\tSALARY as integer,\n\t\tCOMMISSION_PCT as decimal(10,0),\n\t\tDEPARTMENT_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> ExecuteEmployee\nsource(output(\n\t\tEMPLOYEE_ID as integer,\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\tHIRE_DATE as string,\n\t\tSALARY as integer,\n\t\tCOMMISSION_PCT as decimal(10,0),\n\t\tDEPARTMENT_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpreferredIntegralType: 'integer',\n\tpreferredFractionalType: 'decimal') ~> ShippingEmp\nExecuteEmployee, ITEmployee, ShippingEmp union(byName: true)~> UnionEmpolyee\nUnionEmpolyee window(over(DEPARTMENT_NAME),\n\tasc(SALARY, true),\n\tDenseRank = denseRank()) ~> Window\nWindow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DeptWiseSalaryRank.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DeptWiseSalaryRank"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate_Demo_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Aggrregate_DF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "EmployeeDepartment"
							},
							{
								"name": "destination",
								"value": "DeptWiseTotalSalary"
							}
						],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Aggrregate_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employees": {},
									"Departments": {},
									"DeptwiseTotSalary": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Aggrregate_DF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyOracledept_SCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_crz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "HR.DEPARTMENTS"
							},
							{
								"name": "Destination",
								"value": "gen2blobcontainer/Input_Source/Dept_SCR.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_crz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_crz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_crz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_oracle_dept_tabl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_hjj",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "HR.DEPARTMENTS"
							},
							{
								"name": "Destination",
								"value": "gen2blobcontainer/Input_Source/Dept_scr1.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_hjj",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEP_SCR_ADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_hjj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Csv_to_ORCL_DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Csv_to_ORCL_DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/department.csv"
							},
							{
								"name": "Destination",
								"value": "HR.DEPTS_ADF"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "OracleSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "LS_error_Log_CSVTODB",
									"type": "LinkedServiceReference"
								},
								"path": "gen2blobcontainer"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DEPARTMENT_ID",
											"type": "Decimal"
										},
										"sink": {
											"name": "DEPARTMENT_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DEPARTMENT_NAME     ",
											"type": "String"
										},
										"sink": {
											"name": "DEPARTMENT_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MANAGER_ID",
											"type": "Decimal"
										},
										"sink": {
											"name": "MANAGER_ID",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "LOCATION_ID",
											"type": "Decimal"
										},
										"sink": {
											"name": "LOCATION_ID",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Csv_file_Delimited_SRC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "deptOracleDB_DESTN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Csv_file_Delimited_SRC')]",
				"[concat(variables('factoryId'), '/datasets/deptOracleDB_DESTN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exists_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExistDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExistDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employees": {},
									"Departments": {},
									"EmpDeptExists": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ExistDataFlow')]"
			]
		}
	]
}